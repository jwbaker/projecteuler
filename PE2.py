'''
Created on 2013-02-27

Problem 2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will 
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

SOLUTION: 4613732
@author: Jason Baker
'''

import math

# Rather than use the long and inefficient recursive formula, I use Binet's Formula for the closed form of the sequence
def fib(n):
    return math.floor(((1+math.sqrt(5))**(n+1)-(1-math.sqrt(5))**(n+1))/(2**(n+1)*math.sqrt(5)))
    
    
total = 0

i = 1
num = fib(i)

#Just iterate through the Fibonacci sequence
while num < 4000000:
    if num%2 == 0:
        total += num
    i += 1
    num = fib(i)
    
print(total)