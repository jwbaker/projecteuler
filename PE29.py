'''
Created on: 2013-06-01

Problem 29:
Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
4^2=25, 5^3=125, 5^4=625, 5^5=3125

If they are then placed in numeric order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?

SOLUTION: ???
'''

# I'm going to use some knowledge from my CS240 class and use a list implementation of a heap for this problem
# I'm only going to define the insert function for the heap, because that's all I need; I'll start inserting on an empty
# heap, and will define the insert function to discard duplicates without insertion.
# Then the size of the final list will be the answer to the problem

def heapInsert(A, k):
   return A.append(k)
   
heap = []

for a in range(2,101):
   for b in range(2,101):
      next = a**b
      heapInsert(heap,next)
      
print(len(heap))
